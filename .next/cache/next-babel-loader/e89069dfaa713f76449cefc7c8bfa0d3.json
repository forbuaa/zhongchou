{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport { Table } from 'semantic-ui-react';\nimport RequestRow from '../../../components/RequestRow';\n\nclass CompaignRequest extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = campaign.methods.getRequestCount().call();\n    const requests = await _Promise.all(Array(requestCount).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    console.log(requests);\n    return {\n      address,\n      requests\n    };\n  }\n\n  renderRow() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        key: index,\n        id: index,\n        request: request,\n        address: this.props.address\n      });\n    });\n  }\n\n  render() {\n    const {\n      HeaderCell,\n      Row,\n      Header\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h1\", null, \"\\u8BF7\\u6C42\\u5217\\u8868\"), __jsx(Link, {\n      route: `/compaigns/${this.props.address}/requests/new`\n    }, __jsx(Button, {\n      primary: true\n    }, \" \\u589E\\u52A0\\u8BF7\\u6C42\")), __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"ID \"), __jsx(Table.HeaderCell, null, \"\\xA0\\u63CF\\u8FF0\"), __jsx(Table.HeaderCell, null, \"\\u603B\\u7684\\u91D1\\u989D\"), __jsx(Table.HeaderCell, null, \"\\xA0\\u53D7\\u76CA\\u4EBA\\u5730\\u5740\"), __jsx(Table.HeaderCell, null, \"\\u540C\\u610F\\u7684\\u6570\\u91CF\"), __jsx(Table.HeaderCell, null, \"done?\"), __jsx(Table.HeaderCell, null, \"finish?\"))), __jsx(Table.Body, null, render())));\n  }\n\n}\n\nexport default CompaignRequest;","map":{"version":3,"sources":["/Users/eigen/Desktop/fullstackdapp/pages/compaigns/requests/index.js"],"names":["React","Component","Button","Link","Layout","Campaign","Table","RequestRow","CompaignRequest","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestCount","call","requests","all","Array","fill","map","element","index","console","log","renderRow","request","render","HeaderCell","Row","Header"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;;AACA,MAAMC,eAAN,SAA8BP,SAA9B,CAAuC;AAErC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAmC;AAEjC,UAAM;AAACC,MAAAA;AAAD,QAAYD,KAAK,CAACE,KAAxB;AAGA,UAAMC,QAAQ,GAAGR,QAAQ,CAACM,OAAD,CAAzB;AAEA,UAAMG,YAAY,GAAGD,QAAQ,CAACE,OAAT,CAAiBC,eAAjB,GAAmCC,IAAnC,EAArB;AAEA,UAAMC,QAAQ,GAAG,MAAM,SAAQC,GAAR,CAErBC,KAAK,CAACN,YAAD,CAAL,CAAoBO,IAApB,GAA2BC,GAA3B,CAA+B,CAACC,OAAD,EAASC,KAAT,KAAiB;AAG9C,aAAOX,QAAQ,CAACE,OAAT,CAAiBG,QAAjB,CAA0BM,KAA1B,EAAiCP,IAAjC,EAAP;AACD,KAJD,CAFqB,CAAvB;AAUAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,WAAO;AAACP,MAAAA,OAAD;AAASO,MAAAA;AAAT,KAAP;AACD;;AAGHS,EAAAA,SAAS,GAAE;AAET,WAAQ,KAAKjB,KAAL,CAAWQ,QAAX,CAAoBI,GAApB,CAAwB,CAACM,OAAD,EAASJ,KAAT,KAAiB;AAE7C,aAEG,MAAC,UAAD;AACG,QAAA,GAAG,EAAEA,KADR;AAEI,QAAA,EAAE,EAAEA,KAFR;AAGG,QAAA,OAAO,EAAEI,OAHZ;AAIK,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWC;AAJzB,QAFH;AAaH,KAfO,CAAR;AAgBD;;AAGCkB,EAAAA,MAAM,GAAE;AAGP,UAAM;AAACC,MAAAA,UAAD;AAAYC,MAAAA,GAAZ;AAAgBC,MAAAA;AAAhB,QAAyB1B,KAA/B;AACC,WACD,MAAC,MAAD,QAEC,6CAFD,EAKC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,cAAa,KAAKI,KAAL,CAAWC,OAAQ;AAA9C,OACC,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,mCADD,CALD,EAUA,MAAC,KAAD,QACD,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,UAAP,cADF,EAEE,MAAC,KAAD,CAAO,UAAP,2BAFF,EAGE,MAAC,KAAD,CAAO,UAAP,mCAHF,EAII,MAAC,KAAD,CAAO,UAAP,6CAJJ,EAKM,MAAC,KAAD,CAAO,UAAP,yCALN,EAMQ,MAAC,KAAD,CAAO,UAAP,gBANR,EAOU,MAAC,KAAD,CAAO,UAAP,kBAPV,CADF,CADC,EAaA,MAAC,KAAD,CAAO,IAAP,QACGkB,MAAM,EADT,CAbA,CAVA,CADC;AA8BD;;AAjFoC;;AAmFvC,eAAerB,eAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {Link} from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport {Table} from 'semantic-ui-react';\n\nimport RequestRow from '../../../components/RequestRow';\nclass CompaignRequest extends Component{\n\n  static async getInitialProps(props){\n\n    const {address} = props.query;\n\n\n    const campaign = Campaign(address);\n\n    const requestCount = campaign.methods.getRequestCount().call();\n\n    const requests = await Promise.all(\n\n      Array(requestCount).fill().map((element,index)=>{\n\n\n        return campaign.methods.requests(index).call();\n      })\n\n    )\n\n    console.log(requests);\n    return {address,requests};\n  }\n\n\nrenderRow(){\n\n  return  this.props.requests.map((request,index)=>{\n\n      return(\n\n         <RequestRow\n            key={index}\n             id={index}\n            request={request}\n              address={this.props.address}>\n\n        </RequestRow>\n\n\n      );\n\n  });\n}\n\n\n  render(){\n\n\n   const {HeaderCell,Row,Header} =Table;\n    return(\n   <Layout>\n\n    <h1>\n     请求列表\n     </h1>\n    <Link route={`/compaigns/${this.props.address}/requests/new`}>\n     <Button primary> 增加请求</Button>\n     </Link>\n\n\n   <Table >\n  <Table.Header>\n    <Table.Row>\n      <Table.HeaderCell>ID </Table.HeaderCell>\n      <Table.HeaderCell> 描述</Table.HeaderCell>\n      <Table.HeaderCell>总的金额</Table.HeaderCell>\n        <Table.HeaderCell> 受益人地址</Table.HeaderCell>\n          <Table.HeaderCell>同意的数量</Table.HeaderCell>\n            <Table.HeaderCell>done?</Table.HeaderCell>\n              <Table.HeaderCell>finish?</Table.HeaderCell>\n    </Table.Row>\n  </Table.Header>\n\n   <Table.Body>\n     {render()}\n    </Table.Body>\n   </Table>\n   </Layout>\n);\n  }\n}\nexport default CompaignRequest;\n"]},"metadata":{},"sourceType":"module"}